version: '3.8'

services:
  db:
    image: pgvector/pgvector:pg16
    container_name: immigration_bot_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-botuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-immigration_bot}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"
    networks:
      - bot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-botuser}"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot:
    build: .
    container_name: immigration_bot
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:

      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      ADMIN_TELEGRAM_IDS: ${ADMIN_TELEGRAM_IDS}

      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      
      LLM_PROVIDER: ${LLM_PROVIDER:-openai}
      
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4o-mini}
      OPENAI_EMBEDDING_MODEL: ${OPENAI_EMBEDDING_MODEL:-text-embedding-3-small}
      
      CONFIDENCE_THRESHOLD: ${CONFIDENCE_THRESHOLD:-0.7}
    networks:
      - bot_network
    volumes:
      - ./logs:/app/logs

networks:
  bot_network:
    driver: bridge

volumes:
  postgres_data: